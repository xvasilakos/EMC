/*
 tmp class 
 */
package tmp;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import traces.dmdtrace.TraceLoader;

/**
 *
 * @author xvas
 */
public class Main {

   public static void main(String[] args) throws IOException {
      String originalText = new String("                \"This is      a text which will be     edited with String functions.\"         ");

      int i = 0;

      System.out.println(i + ": Original text:" + originalText);
      i++;

      String editedText = new String(originalText);

      System.out.println(i + ": Ektypwsh tou keimenou xwris kena prin kai meta to telos toy keimenou:" + editedText.trim());
      i++;

      //H methodos trim() den tropopoiei to keimeno. Ayto pou kanei einai na epistrefei to keimeno tropopoihmeno
      editedText = editedText.trim(); // twra h anafora editedText deixnei se tropoihmeno keimeno

      System.out.println(i + ": To keimeno ksekinaei me th symboloseira: This is? " + editedText.startsWith("This is"));
      i++;
      
      System.out.println(i + ": To keimeno teleiwnei me th symboloseira \"This is? " + editedText.endsWith("\"This is"));
      i++;

      System.out.println(i + ": Typwse tous prwtous 7 xarakthres:" + editedText.substring(0, 7));
      i++;

      System.out.println(i + ": Typwse to xarakthra pou brisketai sth 7h thesh tou String: " + editedText.charAt(6));
      i++;

      String newText = new String(editedText.substring(0, 7));

      System.out.println(i + ": To keimeno \"This is\" einai idio me to substring? " + newText.equals("This is"));
      i++;

      System.out.println(i + ": To keimeno \"This is it\" einai idio me to substring? " + newText.equals("This is it"));
   }



   private static void printMultiplyWorkload() throws IOException {
      String dir = "C:/Users/xvas/Dropbox/2014-2015-EPC+POP/trunk/files/dmdtrace/video/docs";
      int count = "C:/Users/xvas/Dropbox/2014-2015-EPC+POP/trunk/files/".length();

      File dirF = new File(dir);
      File[] files = dirF.listFiles();

      StringBuffer sb = new StringBuffer();

      for (File file : files) {
         sb.append("../../../" + file.getCanonicalPath().substring(count).replace('\\', '/'));
         sb.append(", ");
      }

      System.out.println(sb);
   }

   private static void multiplyWorkload() throws IOException {
      String dir = "C:\\Users\\xvas\\Dropbox\\2014-2015-EPC+POP\\trunk\\files\\dmdtrace\\video\\workload";

      File dirF = new File(dir);
      File[] files = dirF.listFiles();

      for (File nxt : files) {
         File trgt = new File(nxt.getParentFile().getCanonicalPath(),
               nxt.getName().length() <= 5
                     ? "10" + nxt.getName()
                     : "1" + nxt.getName()
         );
         Files.copy(nxt.toPath(), trgt.toPath());
      }
   }

   private static void repeatsForIni(int i_begin, int i_end) {
      for (int i = i_begin; i <= i_end; i++) {
         System.out.print(i);
         System.out.print(i != i_end ? "; " : "");
      }
   }

   private static void alongAxisX(int i_begin, int i_end) {
      for (int i = i_begin; i <= i_end; i++) {
         System.out.print("[");
         System.out.print(0);
         System.out.print("|");
         System.out.print(i);
         System.out.print("], ");
      }
   }

   private static void alongAxisY(int i_begin, int i_end) {
      for (int i = i_begin; i <= i_end; i++) {
         System.out.print("[");
         System.out.print(i);
         System.out.print("|");
         System.out.print(0);
         System.out.print("], ");
      }
   }

   private static void alongAxisXY(int x_begin, int x_end, int y_begin, int y_end) {
      alongAxisX(x_begin, x_end);
      alongAxisY(y_begin, y_end);
   }

   private static void repeatVal(String val, int repeat) {
      while (repeat-- > 0) {
         System.out.printf("%s, ", val);
      }
   }
}
