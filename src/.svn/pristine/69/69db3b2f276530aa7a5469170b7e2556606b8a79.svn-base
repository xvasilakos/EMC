package caching.rplc.lru;

import caching.Utils;
import caching.base.AbstractCachingPolicy;
import caching.base.AbstractNaive;
import caching.interfaces.rplc.ILRURplc;
import java.util.Set;
import sim.content.Chunk;
import sim.space.cell.smallcell.ITimeBuffer;
import sim.space.cell.smallcell.SmallCell;
import sim.space.cell.smallcell.TimeBufferImpl;
import sim.space.users.CachingUser;

/**
 * Must check functionality after severe changes in code
 *
 * @author xvas
 */
@Deprecated
public final class NaiveLRU extends AbstractNaive implements ILRURplc {

    private static final AbstractCachingPolicy singelton = new NaiveLRU();

    public static AbstractCachingPolicy instance() {
        return singelton;
    }

    public static Class bufferType() {
        return TimeBufferImpl.class;
    }

    private NaiveLRU() {
    }

    @Override
    public Set<Chunk> optForEviction(ITimeBuffer evictBuffer, Chunk item) throws Throwable {
        return Utils.optForEvictionLRUAccess(evictBuffer, item);
    }

    @Override
    public Set<Chunk> cacheDecision(CachingUser mu, SmallCell sc) throws Throwable {
        return Utils.naiveLRUCacheDecision(this, mu, sc, true);
    }

}
