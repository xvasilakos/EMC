package stats.gainstats.cmpt2;

import caching.base.AbstractCachingPolicy;
import java.util.Iterator;
import java.util.List;
import sim.content.request.DocumentRequest;
import sim.content.Chunk;
import sim.space.cell.smallcell.SmallCell;
import sim.space.users.CachingUser;
import stats.StatisticException;
import stats.handlers.BaseHandler;
import stats.handlers.IComputeGain;

/**
 *
 * @author Xenofon Vasilakos xvas@aueb.gr
 */
public class MCDisconnectedNum extends BaseHandler implements IComputeGain<CachingUser, SmallCell> {

    private final AbstractCachingPolicy _cachingPolicy;

    public MCDisconnectedNum(AbstractCachingPolicy cachingMethod) {
        super();
        _cachingPolicy = cachingMethod;
    }

    @Override
    public final double compute2(CachingUser user) throws StatisticException {
        double sum = 0;

        Iterator<DocumentRequest> iterator = user.getRequests().iterator();
        while (iterator.hasNext()) {
            DocumentRequest nxtRequest = iterator.next();
            List<Chunk> consumedChunksFromMCWhenDisconnected = nxtRequest.getChunksConsumedHistoryFromMCWhenDisconnected(_cachingPolicy);
            sum += consumedChunksFromMCWhenDisconnected.size();
        }

        return sum;
    }

    @Override
    public String getStatTitle() {
        return getClass().getSimpleName() + "(" + _cachingPolicy.toString().substring(8) + ")";
    }
}
